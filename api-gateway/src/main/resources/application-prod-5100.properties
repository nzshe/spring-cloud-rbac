spring.application.name=api-gateway
server.port=5100

# 链路数据收集并发送地址
spring.zipkin.base-url=http://127.0.0.1:9100
# 当前应用收集信息百分比
spring.sleuth.sampler.percentage=0.1

zuul.routes.v1/rbac.path=/v1/rbac/**
zuul.routes.v1/rbac.serviceId=rbac-consumer
# 实现指定的路由的cookie信息的传递
zuul.routes.v1/rbac.sensitiveHeaders=

# 通过浏览器开发工具查看登录以及登录之后的请求详情， 可以发现， 引起问题的大致原因是由于SpringSecurity或Shiro在登录完成之后，通过重定向的方式跳转到登录后的页
#面，此时登录后的请求结果状态码为302, 请求响应头信息中的 Location指向了具体的服务实例地址， 而请求头信息中的Host也指向 了具体的服务实例 IP地址和端口。 所以， 该
#问题的根本原因在于Spring Cloud Zuul在路由请求时，并没有将最初的Host信息设置正确。那么如何解决 这个问题呢？
#能够使得网关在进行路由转发前为请求设置Host头信息，以标识最初的服务端请求地址。 具体配置方式如下：
zuul.add-host-header=true
# 注册中心地址
eureka.client.serviceUrl.defaultZone=http://admin:admin@127.0.0.1:20001/eureka/

zuul.SendErrorFilter.post.disable=true

# 设置通信的超时时间
ribbon.SocketTimeout=250
# 因此在消费者的重试时间加起来的总和超过的话就直接连接超时
# 设置连接的超时时间
ribbon.ReadTimeout=50000
#断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

# 开启GZIP的压缩功能以减少HTTP通信的消耗。
feign.compression.request.enabled=true;
feign.compression.response.enabled=true;
# 以下的请求的类型且请求数据的大小超过2048的将为会压缩传输。
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048


# 该参数用来开启重试机制，它默认是关闭的。
spring.cloud.loadbalancer.retry.enabled=true
# 请求连接的超时时间。
AUTHENTICATION-SERVICE.ribbon.ConnectTimeout=250
# 请求处理的超时时间，该超时时间的影响层级大于全局的超时时间,设置了该时间那么，如果调用生产端的时候超过1秒那么就直接调用重试规则，因此若重试次数和切换次数都是为1那么，响应的时间不超过4秒
AUTHENTICATION-SERVICE.ribbon.ReadTimeout=3000
# 对所有操作请求都进行重试。
AUTHENTICATION-SERVICE.ribbon.OkToRetryOnAllOperations=true
# 以下重试实现响应EUREKA-PRODUCER的最大次数是 ：（1 + MaxAutoRetries）* （1 + MaxAutoRetriesNextServer）
# 假设 MaxAutoRetries = 2 ，MaxAutoRetriesNextServer = 4 ，那么最大的重试次数为15次
# 切换实例的重试次数。
AUTHENTICATION-SERVICE.ribbon.MaxAutoRetriesNextServer=1
# 对当前实例的重试次数。
AUTHENTICATION-SERVICE.ribbon.MaxAutoRetries=1

feign.hystrix.enabled=true